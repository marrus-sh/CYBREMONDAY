{% capture styling %}
{% if include.print %}{% assign invert = include.colour.light %}{% elsif include.invert and include.colour.light %}{% assign invert = false %}{% elsif include.invert or include.colour.light %}{% assign invert = true %}{% else %}{% assign invert = false %}{% endif %}
$bg_colour: {% if include.print %}white{% elsif include.invert %}#1f1a14{% else %}#faf8f7{% endif %};
$fg_colour: {% if include.print %}black{% elsif include.invert %}#faf8f7{% else %}#1f1a14{% endif %};
$cur_colour: {% if include.print %}$fg_colour{% elsif include.user_set %}currentColor{% else %}$fg_colour{% endif %};
$trans_colour: {% if include.print %}$bg_colour{% elsif include.user_set %}transparent{% else %}$bg_colour{% endif %};
$hex_colour: {% if invert %}{{ include.colour.title | strip_html | default: '$bg_colour' }}{% else %}{{ include.colour.title | strip_html | default: '$fg_colour' }}{% endif %};
$aside_colour: rgba({{ include.colour.title | strip_html | default: "$fg_colour" }}, .36);

//  Special print styling
{% if include.print %}
BODY {
	Padding: 3em 0 0;
	Min-Width: 0;

	&::BEFORE,
	&::AFTER { Display: none }
	#topbar { Position: absolute }
	#content {
		Padding: 0 1em;
		Max-Width: none;
		Box-Shadow: none;

		#title { Margin: 0 -1em }
		#playlist { Display: none }
		#warnings,
		#endmatter { Margin: 0 -1.25em }
		SECTION.div2 {
			& > NAV {
				Margin: 0 -2em;
				Padding: 0 2em;
			}
		}
	}
	#appx { Margin: 0 }
}
{% endif %}

%aside {
	Color: $cur_colour;
	Background-Color: $aside_colour;
}
%bar {
	Color: {% if invert %}$cur_colour{% else %}$bg_colour{% endif %};
	Background-Color: $hex_colour;
}
%block {
	Color: {% if invert %}$cur_colour{% else %}$hex_colour{% endif %};
	Background-Color: {% if invert %}$hex_colour{% else %}transparent{% endif %};
}
%borderbt { Border-Bottom-Color: {% if invert %}$cur_colour{% else %}$hex_colour{% endif %} }
%borderlf { Border-Left-Color: {% if invert %}$cur_colour{% else %}$hex_colour{% endif %} }
%borderrt { Border-Right-Color: {% if invert %}$cur_colour{% else %}$hex_colour{% endif %} }
%bordertp { Border-Top-Color: {% if invert %}$cur_colour{% else %}$hex_colour{% endif %} }
%bordered {
	@extend %bordertp;
	@extend %borderbt;
	@extend %borderrt;
	@extend %borderlf;
}
%clear {
	Color: currentColor;
	Background-Color: transparent;
}
%cyblock {
	Color: {% if invert %}$cur_colour{% else %}$hex_colour{% endif %};
	Background-Color: {% if invert %}$hex_colour{% else %}$bg_colour{% endif %};
}
%hextext {
	Color: {% if invert %}$cur_colour{% else %}$hex_colour{% endif %};
	Background-Color: {% if invert %}$hex_colour{% else %}transparent{% endif %};
}
%invert {
	Color: $bg_colour;
	Background: $fg_colour;
}
%link {
	Color: {% if invert %}$cur_colour{% else %}$fg_colour{% endif %};
	Background: transparent;
}
%linkborder { Border-Color: {% if invert %}$hex_colour{% else %}$aside_colour{% endif %}}
%plain {
	Color: $fg_colour;
	Background: $bg_colour;
}
%setoff {
	Color: $cur_colour;
	Background-Color: {% if invert %}$hex_colour{% else %}transparent{% endif %};
}
%weakblock {
	Color: {% if invert %}$cur_colour{% else %}$hex_colour{% endif %};
	Background-Color: {% if invert %}$aside_colour{% else %}transparent{% endif %};
}
BODY {
	Color: $cur_colour;
	Background-Color: $trans_colour;
	{% if page.background %}
	&::BEFORE,
	&::AFTER {
		//  We use `include.invert` here because we assume that `hex.light`
		//  was already taken into account when designing the background.
		Color: {% if include.invert %}white{% else %}black{% endif %};
		Background-Blend-Mode: hue, difference;
	}{% endif %}
	#topbar { @extend %bar }
	#content {
		#title { @extend %bar;

			H2#issuetitle {
				SPAN { @extend %cyblock }
			}
			P { @extend %cyblock }
		}
		#warnings {
			@extend %aside;
			@extend %borderbt;
		}
		SECTION.div1 {
			& > SECTION {
				&#introduction > A[Data-Subtype="sectionlink"] > H3,
				&#introduction > H3 { @extend %hextext }
				&:not(#introduction) > A[Data-Subtype="sectionlink"] > H3,
				&:not(#introduction) > H3 {
					Color: $bg_colour;
					Background: radial-gradient(ellipse farthest-corner at -13% -13%, $fg_colour 69%, {% if invert %}mix($fg_colour, $hex_colour, 75%) 69%, mix($fg_colour, $hex_colour, 75%) 74%, mix($fg_colour, $hex_colour, 50%) 74%,  mix($fg_colour, $hex_colour, 50%) 79%,  mix($fg_colour, $hex_colour, 25%) 79%, mix($fg_colour, $hex_colour, 25%) 84%, {% endif %}$hex_colour 84%), $fg_colour;

					&::BEFORE {
						Color: $fg_colour;
						Background-Color: $hex_colour;
					}
					&::AFTER { Color: $hex_colour }
				}
				& > ASIDE { @extend %aside }
				& > NAV {
					@extend %aside;
					@extend %bordertp;
					@extend %borderbt;

					& > OL,
					& > UL {
						& > LI {
							& + LI { @extend %bordertp }
						}
					}
				}
				BLOCKQUOTE {
					@extend %bordertp;
					@extend %borderbt;
					@extend %setoff;

					& > P {
						&:First-Of-Type::BEFORE,
						&:Last-Of-Type::AFTER { @extend %block }
					}
					& > FOOTER:last-child {
						&::BEFORE { @extend %block }
					}
				}
				DIV.p,
				P {
					& + DIV.p,
					& + P {
						&::BEFORE { @extend %block }
					}
				}
				OL,
				UL {
					LI {
						&::BEFORE { @extend %block }
					}
				}
				TABLE {
					&[Data-Type="split"] {
						@extend %bordered;
						@extend %setoff;

						COL {
							@extend %borderlf;
							@extend %borderrt;
						}
					}
				}
			}
		}
		#endmatter {
			@extend %aside;
			@extend %bordertp;

			H3 { @extend %bar;

				CODE.ident[Data-Type="hashtag"],
				DFN,
				EM,
				Q { @extend %clear }
				STRONG { @extend %cyblock }
			}
			P {
				& + P::BEFORE { @extend %block }
			}
		}
		SECTION.body {
			A[Href]:Not([Data-Subtype="sectionlink"]) { @extend %link;

				&:Hover { @extend %block }
				&.block { @extend %linkborder }
			}
			CODE.ident[Data-Type="hashtag"],
			DFN,
			EM,
			Q,
			STRONG { @extend %weakblock }
			B {
				CODE.ident[Data-Type="hashtag"],
				DFN,
				EM,
				Q,
				STRONG { @extend %clear }
			}
		}
	}
	#appx { @extend %bar }
}
B {
	@extend %bordered;
	@extend %bar;

	&[Data-Rend="highlight"] { @extend %cyblock }
}
CODE,
VAR {
	{% if include.print %}&.ident[Data-Type="colour"] { @extend %invert;

		&.ident[Data-Subtype="light"] { @extend %plain }
	}{% elsif include.invert %}&.ident[Data-Type="colour"]{ @extend %plain;

		&.ident[Data-Subtype="light"] { @extend %invert }
	}{% else %}&.ident[Data-Type="colour"] { @extend %invert;

		&.ident[Data-Subtype="light"] { @extend %plain }
	}{% endif %}
}
{% endcapture %}{{ styling | scssify }}
{%- comment %}[Strip whitespace]{% endcomment -%}
